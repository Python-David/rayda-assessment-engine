"""Initial migration

Revision ID: b44dfd07e3da
Revises:
Create Date: 2025-06-30 11:46:41.835173

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b44dfd07e3da"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organizations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_organizations_id"), "organizations", ["id"], unique=False)
    op.create_index(
        op.f("ix_organizations_name"), "organizations", ["name"], unique=True
    )
    op.create_index(
        op.f("ix_organizations_slug"), "organizations", ["slug"], unique=True
    )
    op.create_table(
        "webhook_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("event_id", sa.String(), nullable=False),
        sa.Column(
            "service",
            sa.Enum("USER", "PAYMENT", "COMMUNICATION", name="servicetype"),
            nullable=False,
        ),
        sa.Column("org_id", sa.String(), nullable=False),
        sa.Column("received_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("processed", "failed", "skipped", name="webhookstatus"),
            nullable=False,
        ),
        sa.Column("payload", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.func.now(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("event_id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("superadmin", "admin", "user", name="userrole"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("active", "inactive", "pending", "suspended", name="userstatus"),
            nullable=False,
        ),
        sa.Column(
            "department",
            sa.Enum(
                "engineering",
                "product",
                "sales",
                "marketing",
                "hr",
                "finance",
                name="department",
            ),
            nullable=True,
        ),
        sa.Column(
            "title",
            sa.Enum(
                "engineer",
                "product_manager",
                "designer",
                "sales_rep",
                "hr_manager",
                name="title",
            ),
            nullable=True,
        ),
        sa.Column("org_id", sa.UUID(), nullable=True),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_external_id"), "users", ["external_id"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "audit_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "action",
            sa.Enum(
                "CREATED_USER",
                "UPDATED_USER",
                "DELETED_USER",
                "CREATED_ORG",
                "UPDATED_ORG",
                "DELETED_ORG",
                name="auditaction",
            ),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("org_id", sa.UUID(), nullable=True),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_audit_logs_id"), "audit_logs", ["id"], unique=False)
    op.create_table(
        "communication_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("message_id", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "delivered", "failed", "bounced", "pending", name="communicationstatus"
            ),
            nullable=False,
        ),
        sa.Column("template", sa.String(), nullable=True),
        sa.Column("delivery_time_ms", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_communication_logs_message_id"),
        "communication_logs",
        ["message_id"],
        unique=True,
    )
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("external_subscription_id", sa.String(), nullable=False),
        sa.Column(
            "plan",
            sa.Enum("basic", "professional", "enterprise", name="subscriptionplan"),
            nullable=False,
        ),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column(
            "billing_cycle",
            sa.Enum("monthly", "annual", "quarterly", name="billingcycle"),
            nullable=True,
        ),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("currency", sa.String(), nullable=True),
        sa.Column("trial_end", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_subscriptions_external_subscription_id"),
        "subscriptions",
        ["external_subscription_id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_subscriptions_external_subscription_id"), table_name="subscriptions"
    )
    op.drop_table("subscriptions")
    op.drop_index(
        op.f("ix_communication_logs_message_id"), table_name="communication_logs"
    )
    op.drop_table("communication_logs")
    op.drop_index(op.f("ix_audit_logs_id"), table_name="audit_logs")
    op.drop_table("audit_logs")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_external_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("webhook_logs")
    op.drop_index(op.f("ix_organizations_slug"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_name"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_id"), table_name="organizations")
    op.drop_table("organizations")
    # ### end Alembic commands ###
